@using Blazored.LocalStorage
@inherits LayoutComponentBase
@inject ISyncLocalStorageService _localStorage

<MudThemeProvider IsDarkMode="@_darkMode" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
	<MudAppBar Elevation="0">
		<MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
		<MudText Typo="Typo.h6">NielsSchmidt.dev</MudText>
		<MudSpacer />
		<MudIconButton Icon="@Icons.Material.Filled.DarkMode" Color="Color.Inherit" OnClick="DarkModeToggle" />
	</MudAppBar>
	<MudDrawer @bind-Open="_drawerOpen" Elevation="2" ClipMode="DrawerClipMode.Always" Variant="DrawerVariant.Mini">
		<NavMenu />
	</MudDrawer>
	<MudMainContent>
		<MudContainer MaxWidth="MaxWidth.False" Class="my-2 pt-2">
			@Body
		</MudContainer>
	</MudMainContent>
</MudLayout>

@code {
	private bool _drawerOpen = true;
	private bool _darkMode = true;

	protected async override Task OnInitializedAsync()
	{
		var menu = _localStorage.GetItem<bool?>("menuDrawerOpen");
		_drawerOpen = menu.HasValue ? menu.Value : true;

		var darkMode = _localStorage.GetItem<bool?>("siteDarkMode");
		_darkMode = darkMode.HasValue ? darkMode.Value : false;
	}

	private async Task DrawerToggle()
	{
		_localStorage.SetItem("menuDrawerOpen", !_drawerOpen);
		_drawerOpen = !_drawerOpen;
	}

	private async Task DarkModeToggle()
	{
		_localStorage.SetItem("siteDarkMode", !_darkMode);
		_darkMode = !_darkMode;
	}
}