@using Blazored.LocalStorage
@inherits LayoutComponentBase
@inject ISyncLocalStorageService _localStorage

<MudThemeProvider IsDarkMode="true"/>
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
		<MudAppBar Elevation="0">
				<MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
				<MudSpacer />
				<MudIconButton Icon="@Icons.Custom.Brands.MudBlazor" Color="Color.Inherit" Link="https://mudblazor.com/" Target="_blank" />
				<MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Link="https://github.com/MudBlazor/MudBlazor/" Target="_blank" />
		</MudAppBar>
		<MudDrawer @bind-Open="_drawerOpen" Elevation="1">
				<MudDrawerHeader>
						<MudText Typo="Typo.h6">NielsSchmidt</MudText>
				</MudDrawerHeader>
				<NavMenu />
		</MudDrawer>
		<MudMainContent>
				<MudContainer MaxWidth="MaxWidth.Large" Class="my-16 pt-16">
						@Body
				</MudContainer>
		</MudMainContent>
</MudLayout>

@code {
	private bool _drawerOpen = true;

	protected async override Task OnInitializedAsync()
	{
		var menu = _localStorage.GetItem<bool?>("menuDrawerOpen");
		_drawerOpen = menu.HasValue ? menu.Value : true;
	}

	private async Task DrawerToggle()
	{
		_localStorage.SetItem("menuDrawerOpen", !_drawerOpen);
		_drawerOpen = !_drawerOpen;
	}
}